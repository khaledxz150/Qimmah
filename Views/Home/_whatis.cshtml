<div class="container-md py-5 color-primary">
    <div class="row text-center-md align-items-center">
        <div class="col-md-4">
            <div class="align-items-start flex-column row text-center-md starting-whatis" style="gap: 12rem;">
                <!-- Right Column -->
                <div class="col-md-12 mb-4 mt-5 d-flex align-items-start flex-column gap-4">
                    <h2 cite="mb-3">@Html.GetWord(30)</h2>
                    <div class="text-container">
                        <div class="text-content" data-text-id="text-1">
                            <p class="fs-125-rem color-primary" style="text-align: start;">
                                @Html.GetWord(31)
                            </p>
                        </div>

                        <a class="read-more show-more-btn" data-target="text-1" style="display: none;">
                            @Html.GetWord(99)
                        </a>
                    </div>
                </div>

                <div class="col-md-12 text-center d-flex align-items-start flex-column gap-4">
                    <h2>@Html.GetWord(32)</h2>
                    <div class="text-container">
                        <div class="text-content" data-text-id="text-2">
                            <p class="fs-125-rem color-primary" style="text-align: start;">
                                @Html.GetWord(33)
                            </p>
                        </div>
                        <a class="read-more show-more-btn" data-target="text-2" style="display: none;">
                            @Html.GetWord(99)
                        </a>
                    </div>
                </div>
            </div>
            <!-- Left Column -->
        </div>
        <div class="col-md-4 d-flex justify-content-center mb-4">
            <div class="reveal-container">
               <img src="~/images/icons/question-mark-green.svg"  class=" img-fluid reveal-on-scroll" />
            </div>
        </div>
        <div class="col-md-4 mb-4 mt-2 d-flex align-items-start flex-column gap-4">
            <h2>@Html.GetWord(34)</h2>

            <div class="text-container">
                <div class="text-content color-primary" data-text-id="text-3">
                    <p class="fs-125-rem color-primary" style="text-align: start;">
                        @Html.GetWord(35)
                    <ul class="text-align-start">
                        <li>@Html.GetWord(100)</li>
                        <li>@Html.GetWord(101)</li>
                        <li>@Html.GetWord(102)</li>
                        <li>@Html.GetWord(103)</li>
                        <li>@Html.GetWord(104)</li>
                        <li>@Html.GetWord(105)</li>
                        <li>@Html.GetWord(106)</li>
                        <li>@Html.GetWord(107)</li>
                        <li>@Html.GetWord(108)</li>
                        <li>@Html.GetWord(109)</li>
                    </ul>
                    </p>
                </div>
                <a class="read-more show-more-btn" data-target="text-3" style="display: none;">
                    @Html.GetWord(99)
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Existing reveal animation code
        const revealContainers = document.querySelectorAll(".reveal-container");

        const observer = new IntersectionObserver(
            (entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("revealed");
                        observer.unobserve(entry.target);
                    }
                });
            },
            {
                threshold: 0.5,
            }
        );

        revealContainers.forEach(container => {
            observer.observe(container);
        });



        // Observe changes in the main container
        const mainContainer = document.querySelector('.container-md');
        if (mainContainer) {
            contentObserver.observe(mainContainer, {
                childList: true,
                subtree: true
            });
        }
    });
</script>